{"version":3,"file":"VideoPlayerView.js","sourceRoot":"","sources":["../src/VideoPlayerView.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,wBAAwB,EAAC,MAAM,mBAAmB,CAAA;AAC1D,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAK9B,MAAM,UAAU,GAKZ,wBAAwB,CAAC,aAAa,CAAC,CAAA;AAE3C,MAAM,OAAO,eAAgB,SAAQ,KAAK,CAAC,SAA+B;IACxE,GAAG,GAAyB,KAAK,CAAC,SAAS,EAAE,CAAA;IAE7C,cAAc,GAAG,GAAG,EAAE;QACpB,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,EAAE,CAAA;IACpC,CAAC,CAAA;IAED,WAAW,GAAG,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,CAAA;IACjC,CAAC,CAAA;IAED,eAAe,GAAG,CAAC,aAAuB,EAAE,EAAE;QAC5C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,aAAa,IAAI,KAAK,CAAC,CAAA;IAC3D,CAAC,CAAA;IAED,qBAAqB,GAAG,GAAG,EAAE;QAC3B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,qBAAqB,EAAE,CAAA;IAC3C,CAAC,CAAA;IAED,oBAAoB,GAAG,GAAG,EAAE;QAC1B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,oBAAoB,EAAE,CAAA;IAC1C,CAAC,CAAA;IAED,MAAM;QACJ,OAAO,CACL,CAAC,UAAU,CACT,IAAI,IAAI,CAAC,KAAK,CAAC,CACf,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC,CACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EACd,CACH,CAAA;IACH,CAAC;CACF","sourcesContent":["import {requireNativeViewManager} from 'expo-modules-core'\nimport * as React from 'react'\nimport {StyleProp, ViewStyle} from 'react-native'\n\nimport {VideoPlayerViewProps} from './VideoPlayer.types'\n\nconst NativeView: React.ComponentType<\n  VideoPlayerViewProps & {\n    style: StyleProp<ViewStyle>\n    ref: React.Ref<any>\n  }\n> = requireNativeViewManager('VideoPlayer')\n\nexport class VideoPlayerView extends React.Component<VideoPlayerViewProps> {\n  ref: React.RefObject<any> = React.createRef()\n\n  togglePlayback = () => {\n    this.ref.current?.togglePlayback()\n  }\n\n  toggleMuted = () => {\n    this.ref.current?.toggleMuted()\n  }\n\n  enterFullscreen = (keepDisplayOn?: boolean) => {\n    this.ref.current?.enterFullscreen(keepDisplayOn ?? false)\n  }\n\n  enterPictureInPicture = () => {\n    this.ref.current?.enterPictureInPicture()\n  }\n\n  exitPictureInPicture = () => {\n    this.ref.current?.exitPictureInPicture()\n  }\n\n  render() {\n    return (\n      <NativeView\n        {...this.props}\n        style={[this.props.style, {flex: 1}]}\n        ref={this.ref}\n      />\n    )\n  }\n}\n"]}